"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[5065],{7448:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>b,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var n=t(4848),s=t(8453),o=t(1470),r=t(9365);const c={title:"OceanBase Dashboard Quick Start"},i="OceanBase Dashboard Quick Start",l={id:"dashboard/quickstart",title:"OceanBase Dashboard Quick Start",description:"OceanBase Dashboard is a white-screen operation and maintenance tool that is compatible with ob-operator. As of the latest version 0.2.1, it has functions such as cluster management, tenant management, backup management, performance monitoring, and terminal connection. It is the preferred tool for monitoring OceanBase cluster performance metrics in a K8s environment.",source:"@site/docs/dashboard/quickstart.mdx",sourceDirName:"dashboard",slug:"/dashboard/quickstart",permalink:"/ob-operator/docs/dashboard/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/oceanbase/ob-operator/tree/master/docsite/docs/dashboard/quickstart.mdx",tags:[],version:"current",frontMatter:{title:"OceanBase Dashboard Quick Start"}},d={},u=[{value:"Deploy OceanBase Dashboard",id:"deploy-oceanbase-dashboard",level:2},{value:"Visit OceanBase Dashboard",id:"visit-oceanbase-dashboard",level:2},{value:"Check Monitoring Metrics",id:"check-monitoring-metrics",level:2},{value:"Cluster Monitoring Metrics",id:"cluster-monitoring-metrics",level:3},{value:"Tenant Monitoring Metrics",id:"tenant-monitoring-metrics",level:3},{value:"Upcoming Features",id:"upcoming-features",level:2}];function h(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"oceanbase-dashboard-quick-start",children:"OceanBase Dashboard Quick Start"}),"\n",(0,n.jsx)(a.p,{children:"OceanBase Dashboard is a white-screen operation and maintenance tool that is compatible with ob-operator. As of the latest version 0.2.1, it has functions such as cluster management, tenant management, backup management, performance monitoring, and terminal connection. It is the preferred tool for monitoring OceanBase cluster performance metrics in a K8s environment."}),"\n",(0,n.jsx)(a.h2,{id:"deploy-oceanbase-dashboard",children:"Deploy OceanBase Dashboard"}),"\n",(0,n.jsxs)(a.p,{children:["It's recommended to install OceanBase Dashboard using ",(0,n.jsx)(a.a,{href:"https://github.com/helm/helm",children:"Helm"}),". After confirming that Helm has been installed, execute the following three commands to install OceanBase Dashboard in the default namespace."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"helm repo add ob-operator https://oceanbase.github.io/ob-operator/\nhelm repo update ob-operator\nhelm install oceanbase-dashboard ob-operator/oceanbase-dashboard --version=0.2.1\n"})}),"\n",(0,n.jsxs)(a.p,{children:["If you want to install it in another namespace, you can replace the last installation command with the following command (",(0,n.jsx)(a.code,{children:"<namespace>"})," is the target namespace you want to install). If the namespace does not exist, you can add ",(0,n.jsx)(a.code,{children:"--create-namespace"})," to create it."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"helm install oceanbase-dashboard ob-operator/oceanbase-dashboard --version=0.2.1 -n <namespace> --create-namespace\n"})}),"\n",(0,n.jsx)(a.p,{children:"If the installation command is executed successfully, the following notes will be displayed."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"NAME: oceanbase-dashboard\nLAST DEPLOYED: Wed May  8 11:04:49 2024\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nWelcome to OceanBase dashboard\n\n1. After installing the dashboard chart, you can use `port-forward` to expose the dashboard outside like:\n\n  > kubectl port-forward -n default services/oceanbase-dashboard-oceanbase-dashboard 18081:80 --address 0.0.0.0\n\nthen you can visit the dashboard on http://$YOUR_SERVER_IP:18081\n\n2. Use the following command to get password for default admin user\n\n  > echo $(kubectl get -n default secret oceanbase-dashboard-user-credentials -o jsonpath='{.data.admin}' | base64 -d)\n\nLog in as default account:\nUsername: admin\nPassword: <Get from the above command>\n"})}),"\n",(0,n.jsxs)(a.p,{children:["It would take some time for the K8s cluster to pull the required images after deployment. You can use the following command to check if OceanBase Dashboard has been installed. If the ",(0,n.jsx)(a.code,{children:"READY"})," column shows ",(0,n.jsx)(a.code,{children:"1/1"}),", the installation is complete."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-shell",children:"kubectl get deployment oceanbase-dashboard-oceanbase-dashboard\n# Desired output:\nNAME                                      READY   UP-TO-DATE   AVAILABLE   AGE\noceanbase-dashboard-oceanbase-dashboard   1/1     1            1           2m10s\n"})}),"\n",(0,n.jsx)(a.h2,{id:"visit-oceanbase-dashboard",children:"Visit OceanBase Dashboard"}),"\n",(0,n.jsxs)(a.p,{children:["The default login account created by Dashboard is ",(0,n.jsx)(a.code,{children:"admin"}),". You can get the default account password by executing the second command in the notes above (",(0,n.jsx)(a.code,{children:"echo $(kubectl get ..."}),")."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-shell",children:"echo $(kubectl get -n default secret oceanbase-dashboard-user-credentials -o jsonpath='{.data.admin}' | base64 -d)\n"})}),"\n",(0,n.jsx)(a.p,{children:"After the installation is complete, you can access the OceanBase Dashboard login page through the following methods."}),"\n",(0,n.jsxs)(o.A,{children:[(0,n.jsxs)(r.A,{value:"node-port",label:"By NodePort",default:!0,children:[(0,n.jsx)(a.p,{children:"OceanBase Dashboard creates a Service of type NodePort by default. You can use the following command to get the port exposed on the node by the Service. Please note that the name of the Service will change according to the Helm Chart name you specified, which can be found in the first command in the notes."}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"kubectl get svc oceanbase-dashboard-oceanbase-dashboard\n# Desired output:\nName\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTYPE\t\t\t\tCLUSTER-IP\t\t\tEXTERNAL-IP\t\tPORT(S)\t\t\t\t\tAGE\noceanbase-dashboard-oceanbase-dashboard\t\tNodePort\t\t10.43.20.203\t\t<none>\t\t\t\t80:30176/TCP\t\t13m\n"})}),(0,n.jsxs)(a.p,{children:["You can visit the Dashboard login page by accessing the ",(0,n.jsx)(a.code,{children:"30176"})," port of the K8s node in your browser. Please note that the port number of the service is dynamically assigned by Kubernetes, and the port you need to access after installation depends on the actual situation."]})]}),(0,n.jsxs)(r.A,{value:"load-balancer",label:"By LoadBalancer",default:!0,children:[(0,n.jsxs)(a.p,{children:["If your cluster supports LoadBalancer services, you can specify the service type of OceanBase Dashboard to service during the installation process with the flag: ",(0,n.jsx)(a.code,{children:"--set service.type=LoadBalancer"}),"."]}),(0,n.jsxs)(a.p,{children:["If you have already installed OceanBase Dashboard, you can use the following command to modify the default service type to ",(0,n.jsx)(a.code,{children:"LoadBalancer"}),". After the modification is successful, the cluster will assign an external IP to the OceanBase Dashboard service, and you can access the OceanBase Dashboard page through this external IP."]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:'kubectl patch svc oceanbase-dashboard-oceanbase-dashboard --type=merge --patch=\'{"spec": {"type": "LoadBalancer"}}\'\n'})}),(0,n.jsx)(a.p,{children:"The External IP field will be assigned a value after the modification is successful."}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"$ kubectl get svc\nNAME                                      TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)        AGE\noceanbase-dashboard-oceanbase-dashboard   LoadBalancer   192.168.xx.xx   xxx.xx.xxx.xx   80:xxxxx/TCP   1d5h\n"})})]}),(0,n.jsxs)(r.A,{value:"port-forward",label:"Temporary Access by Port Forwarding",default:!0,children:[(0,n.jsxs)(a.p,{children:["If the node port of your cluster is not accessible so you cannot use the ",(0,n.jsx)(a.code,{children:"NodePort"})," type service to expose OceanBase Dashboard, and your cluster does not support the ",(0,n.jsx)(a.code,{children:"LoadBalancer"})," service, you can use the ",(0,n.jsx)(a.code,{children:"kubectl port-forward"})," command to temporarily expose OceanBase Dashboard to a specified port on the current machine for temporary access. For example, executing the following command will expose OceanBase Dashboard to port 18081 on your current machine (the machine that executes this command)."]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"kubectl port-forward -n default services/oceanbase-dashboard-oceanbase-dashboard 18081:80 --address 0.0.0.0\n"})}),(0,n.jsxs)(a.p,{children:["Visit ",(0,n.jsx)(a.code,{children:"18081"})," port on your machine with a browser to open the login page. Specially, if the ",(0,n.jsx)(a.code,{children:"port-forward"})," command is executed on your personal computer, you can access the service by opening a browser and visiting ",(0,n.jsx)(a.code,{children:"http://127.0.0.1:18081"}),"."]})]})]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"Login Page",src:t(729).A+"",width:"3024",height:"1888"})}),"\n",(0,n.jsx)(a.h2,{id:"check-monitoring-metrics",children:"Check Monitoring Metrics"}),"\n",(0,n.jsx)(a.h3,{id:"cluster-monitoring-metrics",children:"Cluster Monitoring Metrics"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"Cluster Monitoring Metrics",src:t(2432).A+"",width:"3596",height:"2076"})}),"\n",(0,n.jsx)(a.h3,{id:"tenant-monitoring-metrics",children:"Tenant Monitoring Metrics"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"Tenant Monitoring Metrics",src:t(5384).A+"",width:"3596",height:"2066"})}),"\n",(0,n.jsx)(a.h2,{id:"upcoming-features",children:"Upcoming Features"}),"\n",(0,n.jsx)(a.p,{children:"OBProxy management, monitoring alarms, SQL monitoring, and cluster diagnostics are also under active development and will be released in subsequent versions of the Dashboard."})]})}function b(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},9365:(e,a,t)=>{t.d(a,{A:()=>r});t(6540);var n=t(4164);const s={tabItem:"tabItem_Ymn6"};var o=t(4848);function r(e){let{children:a,hidden:t,className:r}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,r),hidden:t,children:a})}},1470:(e,a,t)=>{t.d(a,{A:()=>w});var n=t(6540),s=t(4164),o=t(3104),r=t(6347),c=t(205),i=t(7485),l=t(1682),d=t(9466);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:a,children:t}=e;return(0,n.useMemo)((()=>{const e=a??function(e){return u(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:s}}=e;return{value:a,label:t,attributes:n,default:s}}))}(t);return function(e){const a=(0,l.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function b(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function m(e){let{queryString:a=!1,groupId:t}=e;const s=(0,r.W6)(),o=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,i.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(s.location.search);a.set(o,e),s.replace({...s.location,search:a.toString()})}),[o,s])]}function p(e){const{defaultValue:a,queryString:t=!1,groupId:s}=e,o=h(e),[r,i]=(0,n.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!b({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:o}))),[l,u]=m({queryString:t,groupId:s}),[p,f]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[s,o]=(0,d.Dv)(t);return[s,(0,n.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:s}),g=(()=>{const e=l??p;return b({value:e,tabValues:o})?e:null})();(0,c.A)((()=>{g&&i(g)}),[g]);return{selectedValue:r,selectValue:(0,n.useCallback)((e=>{if(!b({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var f=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function v(e){let{className:a,block:t,selectedValue:n,selectValue:r,tabValues:c}=e;const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),d=e=>{const a=e.currentTarget,t=i.indexOf(a),s=c[t].value;s!==n&&(l(a),r(s))},u=e=>{let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;a=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;a=i[t]??i[i.length-1];break}}a?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},a),children:c.map((e=>{let{value:a,label:t,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:n===a?0:-1,"aria-selected":n===a,ref:e=>i.push(e),onKeyDown:u,onClick:d,...o,className:(0,s.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":n===a}),children:t??a},a)}))})}function y(e){let{lazy:a,children:t,selectedValue:s}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=o.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==s})))})}function j(e){const a=p(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...e,...a}),(0,x.jsx)(y,{...e,...a})]})}function w(e){const a=(0,f.A)();return(0,x.jsx)(j,{...e,children:u(e.children)},String(a))}},2432:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/cluster-metrics-e753c0fcd8f060fe86a48e0abc68af2f.png"},729:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/login-ce5cec84a5342099b0747f2b41c919e6.png"},5384:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/tenant-metrics-304df423e7290f1a3f70c9d72c482836.png"},8453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>c});var n=t(6540);const s={},o=n.createContext(s);function r(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);