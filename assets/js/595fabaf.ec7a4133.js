"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[4212],{7792:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=t(4848),o=t(8453);const a={sidebar_position:1.5},s="Create a tenant",i={id:"manual/ob-operator-user-guide/tenant-management-of-ob-operator/create-tenant",title:"Create a tenant",description:"This topic describes how to create a tenant by using ob-operator.",source:"@site/docs/manual/500.ob-operator-user-guide/200.tenant-management-of-ob-operator/100.create-tenant.md",sourceDirName:"manual/500.ob-operator-user-guide/200.tenant-management-of-ob-operator",slug:"/manual/ob-operator-user-guide/tenant-management-of-ob-operator/create-tenant",permalink:"/ob-operator/docs/manual/ob-operator-user-guide/tenant-management-of-ob-operator/create-tenant",draft:!1,unlisted:!1,editUrl:"https://github.com/oceanbase/ob-operator/tree/master/docsite/docs/manual/500.ob-operator-user-guide/200.tenant-management-of-ob-operator/100.create-tenant.md",tags:[],version:"current",sidebarPosition:1.5,frontMatter:{sidebar_position:1.5},sidebar:"manualSidebar",previous:{title:"Manage tenants",permalink:"/ob-operator/docs/manual/ob-operator-user-guide/tenant-management-of-ob-operator/tenant-management-intro"},next:{title:"Modify tenant",permalink:"/ob-operator/docs/category/modify-tenant"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a tenant by using the configuration file",id:"create-a-tenant-by-using-the-configuration-file",level:2},{value:"Example",id:"example",level:2},{value:"Verify whether the tenant is created",id:"verify-whether-the-tenant-is-created",level:2},{value:"What to do next",id:"what-to-do-next",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"create-a-tenant",children:"Create a tenant"}),"\n",(0,r.jsx)(n.p,{children:"This topic describes how to create a tenant by using ob-operator."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before you create a tenant, make sure the following conditions are met:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You have deployed ob-operator V2.1.0 or later."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You have deployed an OceanBase cluster, which is running normally."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"create-a-tenant-by-using-the-configuration-file",children:"Create a tenant by using the configuration file"}),"\n",(0,r.jsxs)(n.p,{children:["You can create a tenant by using the configuration file of the tenant. For more information about the configuration file, visit ",(0,r.jsx)(n.a,{href:"https://github.com/oceanbase/ob-operator/blob/2.2.1_release/deploy/tenant.yaml",children:"GitHub"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Run the following command to create a tenant. This command creates an OceanBase Database tenant with custom resources in the current Kubernetes cluster."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f tenant.yaml\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["Create a MySQL tenant named ",(0,r.jsx)(n.code,{children:"t1"})," with three replicas and allow all clients to connect to the tenant."]}),"\n",(0,r.jsxs)(n.p,{children:["During the creation of the tenant, ob-operator creates resource units and resource pools based on the zones in the pools specified in the ",(0,r.jsx)(n.code,{children:"tenant.yaml"})," configuration file. ob-operator creates resource units based on the parameter settings in the ",(0,r.jsx)(n.code,{children:"resource"})," section and creates resource pools based on the resource units."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: oceanbase.oceanbase.com/v1alpha1  \nkind: OBTenant  \nmetadata:  \n  name: t1\n  namespace: oceanbase\nspec:\n  obcluster: obcluster\n  tenantName: t1\n  unitNum: 1\n  charset: utf8mb4  \n  connectWhiteList: '%'\n  forceDelete: true\n  credentials: # optional\n    root: t1-ro # optional, empty root password if not given\n    standbyRo: t1-ro # optional, generate automatically if not given\n  pools:\n    - zone: zone1\n      type:\n        name: Full\n        replica: 1\n        isActive: true\n      resource:\n        maxCPU: 1\n        minCPU: 1\n        memorySize: 5Gi\n        maxIops: 1024\n        minIops: 1024\n        iopsWeight: 2\n        logDiskSize: 12Gi\n    - zone: zone2\n      type:\n        name: Full\n        replica: 1\n        isActive: true\n      resource:\n        maxCPU: 1\n        minCPU: 1\n        memorySize: 5Gi\n        maxIops: 1024\n        minIops: 1024\n        iopsWeight: 2\n        logDiskSize: 12Gi\n    - zone: zone3\n      type:\n        name: Full\n        replica: 1\n        isActive: true\n      priority: 3\n      resource:\n        maxCPU: 1\n        minCPU: 1\n        memorySize: 5Gi\n        maxIops: 1024\n        minIops: 1024\n        iopsWeight: 2\n        logDiskSize: 12Gi\n"})}),"\n",(0,r.jsx)(n.p,{children:"The following table describes the parameters."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"metadata.name"}),(0,r.jsx)(n.td,{children:"Required. The name of the tenant resource, which must be unique in the same namespace of the Kubernetes cluster."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"metadata.namespace"}),(0,r.jsx)(n.td,{children:"Required. The namespace where the tenant resources are located."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"obcluster"}),(0,r.jsx)(n.td,{children:"Required. The name of the OceanBase cluster in which the tenant is to be created."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"tenantName"}),(0,r.jsxs)(n.td,{children:["Required. The name of the tenant. Like a variable, a tenant name can contain up to 128 characters, which can be letters, digits, and underscores (",(0,r.jsx)(n.code,{children:"_"}),"). The tenant name must start with a letter or an underscore (",(0,r.jsx)(n.code,{children:"_"}),") and cannot be a keyword of OceanBase Database.  For more information about the keywords supported by OceanBase Database, see ",(0,r.jsx)(n.a,{href:"https://en.oceanbase.com/docs/common-oceanbase-database-10000000001103417",children:"Reserved keywords (MySQL mode)"})," or ",(0,r.jsx)(n.a,{href:"https://en.oceanbase.com/docs/common-oceanbase-database-10000000001103416",children:"Reserved keywords (Oracle mode)"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"unitNum"}),(0,r.jsx)(n.td,{children:"Required. The number of resource units to be created for the zone. The value must be less than the number of OBServer nodes in the zone."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"charset"}),(0,r.jsxs)(n.td,{children:["Optional. The character set of the tenant. For more information about character sets, see ",(0,r.jsx)(n.a,{href:"https://en.oceanbase.com/docs/common-oceanbase-database-10000000001106482",children:"Character sets"}),". This parameter is set to ",(0,r.jsx)(n.code,{children:"utf8mb4"})," by default."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"collate"}),(0,r.jsxs)(n.td,{children:["Optional. The collation of the tenant. For more information about collations, see ",(0,r.jsx)(n.a,{href:"https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000000222182",children:"Collations"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"connectWhiteList"}),(0,r.jsxs)(n.td,{children:["Optional. The IP addresses of the clients that are allowed to connect to the tenant. ",(0,r.jsx)(n.code,{children:"%"})," indicates that all client IP addresses are allowed to connect to the tenant. The default value is ",(0,r.jsx)(n.code,{children:"%"}),". When you modify this parameter, the value must include the CIDR block of ob-operator; otherwise, ob-operator cannot connect to the tenant."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"forceDelete"}),(0,r.jsxs)(n.td,{children:["Optional. Specifies whether to forcibly delete the tenant. The default value is ",(0,r.jsx)(n.code,{children:"false"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"credentials"}),(0,r.jsx)(n.td,{children:"Optional. The secret resources referenced for creating the user and changing the password when you create the tenant. You can specify the passwords of the root account and the standbyro account. If you do not specify this parameter, the password is not changed."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"pools"}),(0,r.jsx)(n.td,{children:"The topology of the tenant, which defines the replica and resource distribution of the tenant in each zone."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"type.name"}),(0,r.jsxs)(n.td,{children:["Required. The type of replicas in the zone. The valid values are ",(0,r.jsx)(n.code,{children:"full"})," and ",(0,r.jsx)(n.code,{children:"readonly"}),". This parameter is case insensitive."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"type.replica"}),(0,r.jsxs)(n.td,{children:["Optional. The number of replicas in the zone. This parameter is set to ",(0,r.jsx)(n.code,{children:"1"})," by default."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"type.isActive"}),(0,r.jsx)(n.td,{children:"Specifies whether to enable the zone."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"priority"}),(0,r.jsx)(n.td,{children:"Optional. The priority of the current zone. A larger number indicates a higher priority. This parameter is set to 0 by default."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"resource"}),(0,r.jsx)(n.td,{children:"The resource information of the tenant in the zone."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxCPU"}),(0,r.jsxs)(n.td,{children:["Required. The maximum number of CPU cores provided by a resource unit in the zone for the tenant. The minimum value is ",(0,r.jsx)(n.code,{children:"1"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"minCPU"}),(0,r.jsxs)(n.td,{children:["Optional. The minimum number of CPU cores provided by a resource unit in the zone for the tenant. This parameter is equal to the value of the ",(0,r.jsx)(n.code,{children:"maxCPU"})," parameter by default."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"memorySize"}),(0,r.jsxs)(n.td,{children:["Required. The size of memory provided by a resource unit in the zone for the tenant. The minimum value is ",(0,r.jsx)(n.code,{children:"1GB"}),". Take note of the value of the cluster parameter ",(0,r.jsx)(n.code,{children:"__min_full_resource_pool_memory"})," when you specify this parameter."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxIops"}),(0,r.jsx)(n.td,{children:"Optional. The maximum I/O resources provided by a resource unit in the zone for the tenant."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"minIops"}),(0,r.jsx)(n.td,{children:"Optional. The minimum I/O resources provided by a resource unit in the zone for the tenant."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"iopsWeight"}),(0,r.jsxs)(n.td,{children:["Optional. The weight of the tenant for using I/O resources provided by a resource unit in the zone. The default value is ",(0,r.jsx)(n.code,{children:"1"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"logDiskSize"}),(0,r.jsxs)(n.td,{children:["Optional. The size of log space provided by a resource unit in the zone for the tenant. The default value is three times the memory size. The minimum value is ",(0,r.jsx)(n.code,{children:"2Gi"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"verify-whether-the-tenant-is-created",children:"Verify whether the tenant is created"}),"\n",(0,r.jsxs)(n.p,{children:["After the tenant creation process is completed, run the following command to check whether the current Kubernetes cluster contains the custom resources of the created tenant and whether the status of the custom resource is ",(0,r.jsx)(n.code,{children:"Running"}),". The related configurations are displayed in the ",(0,r.jsx)(n.code,{children:"status"})," section."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl describe obtenants.oceanbase.oceanbase.com -n oceanbase t1\n"})}),"\n",(0,r.jsx)(n.p,{children:"Here is a sample result:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"Name:         t1\nNamespace:    oceanbase\nLabels:       <none>\nAnnotations:  <none>\nAPI Version:  oceanbase.oceanbase.com/v1alpha1\nKind:         OBTenant\nMetadata:\n  Creation Timestamp:  2023-11-13T07:28:31Z\n  Finalizers:\n    finalizers.oceanbase.com.deleteobtenant\n  Generation:        2\n  Resource Version:  940236\n  UID:               34036a49-26bf-47cf-8201-444b3850aaa2\nSpec:\n  Charset:             utf8mb4\n  Connect White List:  %\n  Credentials:\n    Root:        t1-ro\n    Standby Ro:  t1-ro\n  Force Delete:  true\n  Obcluster:     obcluster\n  Pools:\n    Priority:  1\n    Resource:\n      Iops Weight:    2\n      Log Disk Size:  12Gi\n      Max CPU:        1\n      Max Iops:       1024\n      Memory Size:    5Gi\n      Min CPU:        1\n      Min Iops:       1024\n    Type:\n      Is Active:  true\n      Name:       Full\n      Replica:    1\n    Zone:         zone1\n    Priority:     1\n    Resource:\n      Iops Weight:    2\n      Log Disk Size:  12Gi\n      Max CPU:        1\n      Max Iops:       1024\n      Memory Size:    5Gi\n      Min CPU:        1\n      Min Iops:       1024\n    Type:\n      Is Active:  true\n      Name:       Full\n      Replica:    1\n    Zone:         zone2\n    Priority:     3\n    Resource:\n      Iops Weight:    2\n      Log Disk Size:  12Gi\n      Max CPU:        1\n      Max Iops:       1024\n      Memory Size:    5Gi\n      Min CPU:        1\n      Min Iops:       1024\n    Type:\n      Is Active:  true\n      Name:       Full\n      Replica:    1\n    Zone:         zone3\n  Tenant Name:    t1\n  Tenant Role:    PRIMARY\n  Unit Num:       1\nStatus:\n  Credentials:\n    Root:        t1-ro\n    Standby Ro:  t1-ro\n  Resource Pool:\n    Priority:  1\n    Type:\n      Is Active:  true\n      Name:       FULL\n      Replica:    1\n    Unit Config:\n      Iops Weight:    2\n      Log Disk Size:  12884901888\n      Max CPU:        1\n      Max Iops:       1024\n      Memory Size:    5368709120\n      Min CPU:        1\n      Min Iops:       1024\n    Unit Num:         1\n    Units:\n      Migrate:\n        Server IP:    \n        Server Port:  0\n      Server IP:      10.42.0.189\n      Server Port:    2882\n      Status:         ACTIVE\n      Unit Id:        1006\n    Zone List:        zone1\n    Priority:         1\n    Type:\n      Is Active:  true\n      Name:       FULL\n      Replica:    1\n    Unit Config:\n      Iops Weight:    2\n      Log Disk Size:  12884901888\n      Max CPU:        1\n      Max Iops:       1024\n      Memory Size:    5368709120\n      Min CPU:        1\n      Min Iops:       1024\n    Unit Num:         1\n    Units:\n      Migrate:\n        Server IP:    \n        Server Port:  0\n      Server IP:      10.42.1.118\n      Server Port:    2882\n      Status:         ACTIVE\n      Unit Id:        1007\n    Zone List:        zone2\n    Priority:         2\n    Type:\n      Is Active:  true\n      Name:       FULL\n      Replica:    1\n    Unit Config:\n      Iops Weight:    2\n      Log Disk Size:  12884901888\n      Max CPU:        1\n      Max Iops:       1024\n      Memory Size:    5368709120\n      Min CPU:        1\n      Min Iops:       1024\n    Unit Num:         1\n    Units:\n      Migrate:\n        Server IP:    \n        Server Port:  0\n      Server IP:      10.42.0.190\n      Server Port:    2882\n      Status:         ACTIVE\n      Unit Id:        1008\n    Zone List:        zone3\n  Status:             running\n  Tenant Record Info:\n    Charset:             utf8mb4\n    Connect White List:  %\n    Locality:            FULL{1}@zone1, FULL{1}@zone2, FULL{1}@zone3\n    Pool List:           pool_t1_zone1,pool_t1_zone2,pool_t1_zone3\n    Primary Zone:        zone3;zone1,zone2\n    Tenant ID:           1006\n    Unit Num:            1\n    Zone List:           zone1,zone2,zone3\n  Tenant Role:           PRIMARY\nEvents:\n  Type    Reason  Age                    From                 Message\n  ----    ------  ----                   ----                 -------\n  Normal          2m58s                  obtenant-controller  start creating\n  Normal          115s                   obtenant-controller  create OBTenant successfully\n"})}),"\n",(0,r.jsx)(n.h2,{id:"what-to-do-next",children:"What to do next"}),"\n",(0,r.jsxs)(n.p,{children:["After the tenant is created, the password of its administrator account is the value of ",(0,r.jsx)(n.code,{children:"secret"})," specified in the ",(0,r.jsx)(n.code,{children:"spec.credentials.root"})," field. If you have not specified the ",(0,r.jsx)(n.code,{children:"secret"})," field, the password is empty. You can use the ",(0,r.jsx)(n.code,{children:"obclient -h${podIP} -P2881 -uroot@tenantname -p -A"})," or ",(0,r.jsx)(n.code,{children:"mysql -h${podIP} -P2881 -uroot@tenantname -p -A"})," statement to log on to the database."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const o={},a=r.createContext(o);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);