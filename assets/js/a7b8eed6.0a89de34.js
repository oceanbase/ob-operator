"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[8442],{4558:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=s(4848),o=s(8453);const a={sidebar_position:3,title:"ArgoCD Example"},r=void 0,i={id:"manual/appendix/argocd-example",title:"ArgoCD Example",description:"Introduction",source:"@site/docs/manual/900.appendix/300.argocd-example.md",sourceDirName:"manual/900.appendix",slug:"/manual/appendix/argocd-example",permalink:"/ob-operator/docs/manual/appendix/argocd-example",draft:!1,unlisted:!1,editUrl:"https://github.com/oceanbase/ob-operator/tree/master/docsite/docs/manual/900.appendix/300.argocd-example.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"ArgoCD Example"},sidebar:"manualSidebar",previous:{title:"FAQ",permalink:"/ob-operator/docs/manual/appendix/FAQ"}},l={},c=[{value:"Introduction",id:"introduction",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:3},{value:"Verification",id:"verification",level:3},{value:"Accessing the Database",id:"accessing-the-database",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:['This guide explains how to use the provided example to deploy a complete OceanBase environment using ArgoCD. The example follows the "App of Apps" pattern, where a single parent ArgoCD application (',(0,t.jsx)(n.code,{children:"oceanbase-stack"}),") manages the deployment of all the other child applications, ensuring they are created in the correct order using a combination of Sync Phases and Waves."]}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before you begin, ensure you have the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A running Kubernetes cluster."}),"\n",(0,t.jsxs)(n.li,{children:["ArgoCD installed on your cluster. You can find the installation instructions in the ",(0,t.jsx)(n.a,{href:"https://argo-cd.readthedocs.io/en/stable/getting_started/",children:"official ArgoCD documentation"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"kubectl"})," installed and configured to connect to your cluster."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"The installation process involves applying a single manifest to your ArgoCD cluster, which will then deploy all the necessary components."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Step 1: Configure Custom Health Checks"})}),"\n",(0,t.jsxs)(n.p,{children:["For ArgoCD to accurately report the status of all resources, you must add custom health check scripts to the ",(0,t.jsx)(n.code,{children:"argocd-cm"})," ConfigMap."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a file named ",(0,t.jsx)(n.code,{children:"argocd-health-patch.yaml"})," with the following content:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'data:\n  resource.customizations.health.argoproj.io_Application: |\n    hs = {}\n    hs.status = "Progressing"\n    hs.message = ""\n    if obj.status ~= nil then\n      if obj.status.health ~= nil then\n        hs.status = obj.status.health.status\n        if obj.status.health.message ~= nil then\n          hs.message = obj.status.health.message\n        end\n      end\n    end\n    return hs\n  resource.customizations.health.oceanbase.oceanbase.com_OBCluster: |\n    hs = {}\n    if obj.status == nil or obj.status.status == nil then\n      hs.status = "Progressing"\n      hs.message = "Waiting for status"\n      return hs\n    end\n\n    local current_status = obj.status.status\n    if current_status == "running" then\n      hs.status = "Healthy"\n      hs.message = "Cluster is running"\n    elseif current_status == "failed" then\n      hs.status = "Degraded"\n      hs.message = "Cluster has failed"\n    else\n      hs.status = "Progressing"\n      hs.message = "Cluster is " .. current_status\n    end\n    return hs\n  resource.customizations.health.oceanbase.oceanbase.com_OBTenant: |\n    hs = {}\n    if obj.status == nil or obj.status.status == nil then\n      hs.status = "Progressing"\n      hs.message = "Waiting for status"\n      return hs\n    end\n\n    local current_status = obj.status.status\n    if current_status == "running" then\n      hs.status = "Healthy"\n      hs.message = "Tenant is running"\n    elseif current_status == "failed" then\n      hs.status = "Degraded"\n      hs.message = "Tenant has failed"\n    else\n      hs.status = "Progressing"\n      hs.message = "Tenant is " .. current_status\n    end\n    return hs\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Apply the patch to your ",(0,t.jsx)(n.code,{children:"argocd-cm"})," ConfigMap:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl patch configmap argocd-cm -n argocd --patch-file argocd-health-patch.yaml\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Step 2: Prepare the Repository"})}),"\n",(0,t.jsxs)(n.p,{children:["The example files are configured to be deployed from the upstream OceanBase operator repository. If you are deploying from your own fork of the repository, you must first update the ",(0,t.jsx)(n.code,{children:"repoURL"})," in the application manifests."]}),"\n",(0,t.jsx)(n.p,{children:"The following files need to be updated to point to your Git repository:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"example/argocd/oceanbase-stack.yaml"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"example/argocd/apps/secrets.yaml"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"example/argocd/apps/obcluster.yaml"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"example/argocd/apps/obtenant.yaml"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"example/argocd/apps/ob-configserver.yaml"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"example/argocd/apps/obproxy.yaml"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["In each file, change the ",(0,t.jsx)(n.code,{children:"repoURL"})," to your forked repository's URL."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Step 3: Deploy the Application Stack"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"oceanbase-stack"})," application is the parent application that manages all other components. Deploy it to your ArgoCD instance using the following command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f example/argocd/oceanbase-stack.yaml -n argocd\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Step 4: Monitor the Deployment"})}),"\n",(0,t.jsxs)(n.p,{children:["Once the ",(0,t.jsx)(n.code,{children:"oceanbase-stack"})," application is created, you can monitor the deployment process in the ArgoCD UI. The deployment follows a specific order to ensure dependencies are met:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pre-Sync Phase:"})," The following applications are deployed first to set up the foundational components. ArgoCD will wait for these to complete and become Healthy before moving on."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ob-operator"}),": Installs the OceanBase operator and its CRDs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"secrets"}),": Creates the necessary password secrets."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ob-configserver"}),": Deploys the configuration server."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Wave 1:"})," After the Pre-Sync phase is successful, this wave deploys the main cluster components."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"obcluster"}),": Deploys the OceanBase cluster."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"obproxy"}),": Deploys the proxy."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Wave 2:"})," After Wave 1 is healthy, the final wave deploys the tenant."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"obtenant"}),": Deploys the tenant."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"verification",children:"Verification"}),"\n",(0,t.jsxs)(n.p,{children:["After the sync process is complete, all applications in the ArgoCD UI should have a ",(0,t.jsx)(n.code,{children:"Synced"})," and ",(0,t.jsx)(n.code,{children:"Healthy"})," status."]}),"\n",(0,t.jsxs)(n.p,{children:["You can also verify the deployment using ",(0,t.jsx)(n.code,{children:"kubectl"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Check the pods in the ",(0,t.jsx)(n.code,{children:"oceanbase"})," and ",(0,t.jsx)(n.code,{children:"oceanbase-system"})," namespaces to ensure all components are running."]}),"\n",(0,t.jsxs)(n.li,{children:["Check the status of the ",(0,t.jsx)(n.code,{children:"OBCluster"})," and ",(0,t.jsx)(n.code,{children:"OBTenant"})," custom resources."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"accessing-the-database",children:"Accessing the Database"}),"\n",(0,t.jsxs)(n.p,{children:["Once all the applications are ",(0,t.jsx)(n.code,{children:"Synced"})," and ",(0,t.jsx)(n.code,{children:"Healthy"}),", the ",(0,t.jsx)(n.code,{children:"oceanbase-stack"})," provides a fully functional OceanBase tenant that is compatible with MySQL. You can connect to this database instance from other applications within your Kubernetes cluster."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Connection Details:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Host:"})," ",(0,t.jsx)(n.code,{children:"obproxy.oceanbase.svc.cluster.local"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Port:"})," ",(0,t.jsx)(n.code,{children:"2883"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Username:"})," ",(0,t.jsx)(n.code,{children:"root@obtenant"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Password:"})," The password is automatically generated and stored in a Kubernetes secret."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To retrieve the password, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get secret tenant-root-password -n oceanbase -o jsonpath='{.data.password}' | base64 -d\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can use these details to configure any MySQL-compatible client or application to connect to your OceanBase tenant."}),"\n",(0,t.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Sync Failures due to Network Issues:"}),"\nThe ArgoCD server needs to be able to connect to the Git repository and the Helm repository. If you see ",(0,t.jsx)(n.code,{children:"Unknown"})," sync statuses or errors like ",(0,t.jsx)(n.code,{children:"context deadline exceeded"}),", it indicates a network problem between your ArgoCD instance and the internet. Ensure that firewalls, proxies, and network policies are configured to allow this traffic."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var t=s(6540);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);