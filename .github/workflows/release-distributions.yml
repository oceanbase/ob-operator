name: release distributions

on: 
  push:
    tags: 
      - "observer-*"
      - "obproxy-*"
      - "obagent-*"
      - "obconfigserver-*"

env:
  tagName: ${{ github.ref_name }}

jobs:
  release-observer:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'observer-') }}
    steps:
      - name: Log in to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Version variables
        id: set_version_vars
        run: echo "version=$(echo $tagName | grep -P '(\d*\.\d*\.\d*\.\d*-\d{18})' --only-matching)" >> $GITHUB_OUTPUT

      - name: Build and push observer w/o cache
        uses: docker/build-push-action@v2
        with:
          context: ./distribution/oceanbase
          platforms: linux/amd64,linux/arm64
          file: ./distribution/oceanbase/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/oceanbase-cloud-native:${{ steps.set_version_vars.outputs.version }}
          build-args: |
            VERSION=${{ steps.set_version_vars.outputs.version }}

  release-obproxy:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'obproxy-') }}
    steps:
      - name: Log in to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Version variables
        id: set_version_vars
        run: echo "version=$(echo $tagName | grep -P '(\d*\.\d*\.\d*\.\d*-\d*)' --only-matching)" >> $GITHUB_OUTPUT

      - name: Build and push obproxy w/o cache
        uses: docker/build-push-action@v2
        with:
          context: ./distribution/obproxy
          platforms: linux/amd64,linux/arm64
          file: ./distribution/obproxy/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/obproxy-cloud-native:${{ steps.set_version_vars.outputs.version }}
          build-args: |
            VERSION=${{ steps.set_version_vars.outputs.version }}

  release-obagent:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'obagent-') }}
    steps:
      - name: Log in to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Version variables
        id: set_version_vars
        run: echo "version=$(echo $tagName | grep -P '(\d*\.\d*\.\d*-\d*)' --only-matching)" >> $GITHUB_OUTPUT

      - name: Build and push obagent w/o cache
        uses: docker/build-push-action@v2
        with:
          context: ./distribution/obagent
          platforms: linux/amd64,linux/arm64
          file: ./distribution/obagent/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/obagent-cloud-native:${{ steps.set_version_vars.outputs.version }}
          build-args: |
            VERSION=${{ steps.set_version_vars.outputs.version }}

  release-obconfigserver:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'obconfigserver-') }}
    steps:
      - name: Log in to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Version variables
        id: set_version_vars
        run: echo "version=$(echo $tagName | grep -P '(\d*\.\d*\.\d*-\d*)' --only-matching)" >> $GITHUB_OUTPUT

      - name: Build and push obconfigserver w/o cache
        uses: docker/build-push-action@v2
        with:
          context: ./distribution/ob-configserver
          platforms: linux/amd64,linux/arm64
          file: ./distribution/ob-configserver/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/obconfigserver-cloud-native:${{ steps.set_version_vars.outputs.version }}
          build-args: |
            VERSION=${{ steps.set_version_vars.outputs.version }}
